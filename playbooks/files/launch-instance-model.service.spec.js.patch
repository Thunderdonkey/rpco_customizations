--- /openstack/venvs/horizon-14.2.14/lib/python2.7/site-packages/openstack_dashboard/dashboards/project/static/dashboard/project/workflow/launch-instance/launch-instance-model.service.spec.js	2018-01-15 20:44:20.000000000 +0000
+++ launch-instance-model.service.spec_new-f7579a75c1360316cc2e42a0727a8d19.js	2018-05-07 17:31:46.097703684 +0000
@@ -158,6 +158,7 @@
         beforeEach(function () {
           settings = {
             LAUNCH_INSTANCE_DEFAULTS: {
+              create_volume: true,
               config_drive: false,
               disable_image: false,
               disable_instance_snapshot: false,
@@ -481,6 +482,22 @@
           expect(model.newInstanceSpec.config_drive).toBe(true);
         });

+        it('should default create_volume to true if setting not provided', function() {
+          delete settings.LAUNCH_INSTANCE_DEFAULTS.create_volume;
+          model.initialize(true);
+          scope.$apply();
+
+          expect(model.newInstanceSpec.create_volume_default).toBe(true);
+        });
+
+        it('should default create_volume to false based on setting', function() {
+          settings.LAUNCH_INSTANCE_DEFAULTS.create_volume = false;
+          model.initialize(true);
+          scope.$apply();
+
+          expect(model.newInstanceSpec.create_volume_default).toBe(false);
+        });
+
         it('should not set availability zone if the zone list is empty', function () {
           spyOn(novaApi, 'getAvailabilityZones').and.callFake(function () {
             var deferred = $q.defer();
@@ -579,6 +596,7 @@
         });

         it('should have proper allowedBootSources if specific settings missing', function() {
+          delete settings.LAUNCH_INSTANCE_DEFAULTS.create_volume;
           delete settings.LAUNCH_INSTANCE_DEFAULTS.disable_image;
           delete settings.LAUNCH_INSTANCE_DEFAULTS.disable_instance_snapshot;
           delete settings.LAUNCH_INSTANCE_DEFAULTS.disable_volume;
@@ -591,6 +609,7 @@
           expect(model.allowedBootSources).toContain(INSTANCE_SNAPSHOT);
           expect(model.allowedBootSources).toContain(VOLUME);
           expect(model.allowedBootSources).toContain(VOLUME_SNAPSHOT);
+          expect(model.newInstanceSpec.create_volume_default).toBe(true);
         });

         it('should have no images if disable_image is set to true', function() {
@@ -746,7 +765,7 @@
         // This is here to ensure that as people add/change items, they
         // don't forget to implement tests for them.
         it('has the right number of properties', function() {
-          expect(Object.keys(model.newInstanceSpec).length).toBe(21);
+          expect(Object.keys(model.newInstanceSpec).length).toBe(22);
         });

         it('sets availability zone to null', function() {
@@ -761,6 +780,10 @@
           expect(model.newInstanceSpec.config_drive).toBe(false);
         });

+        it('sets create volume to true', function() {
+          expect(model.newInstanceSpec.create_volume_default).toBe(true);
+        });
+
         it('sets user data to an empty string', function() {
           expect(model.newInstanceSpec.user_data).toBe('');
         });
